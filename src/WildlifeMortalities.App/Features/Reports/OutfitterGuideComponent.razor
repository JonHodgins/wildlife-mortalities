@using WildlifeMortalities.Data.Entities.People;
@if (ReadOnly)
{
    <MudField Label="@Label" DisableUnderLine="true" Class="mb-2">@Guide.FirstName @Guide.LastName</MudField>
}
else
{
    <MudText>@Label</MudText>
    <MudStack Row="true">
        <MudTextField Label="First name" @bind-Value="@Guide.FirstName" @bind-Value:after="Revalidate" For="(() => Guide.FirstName)" Class="mb-2" />
        <MudTextField Label="Last name" @bind-Value="@Guide.LastName" For="(() => Guide.LastName)" />
    </MudStack>
}

@code {
    [Parameter]
    [EditorRequired]
    public string Label { get; set; } = null!;

    [Parameter]
    [EditorRequired]
    public OutfitterGuide Guide { get; set; } = null!;

    [Parameter]
    public bool ReadOnly { get; set; } = true;

    [Parameter] 
    public bool IsChiefGuide { get; set; } = false;

    [Parameter] 
    public bool IsFirstAssistantGuide { get; set; } = false;

    [Parameter, EditorRequired] 
    public OutfitterGuidedHuntReportViewModel ReportViewModel { get; set; } = null!;

    [CascadingParameter] 
    protected EditContext Context { get; set; } = null!;

    private void Revalidate()
    {
        if (IsChiefGuide == false && IsFirstAssistantGuide == false) { return; }

        if (IsChiefGuide == false)
        {
            Context.NotifyFieldChanged(FieldIdentifier.Create(() => ReportViewModel.ChiefGuide.FirstName));
        }
        else
        {
            Context.NotifyFieldChanged(FieldIdentifier.Create(() => ReportViewModel.AssistantGuides.First().FirstName));
        }


    }
}
