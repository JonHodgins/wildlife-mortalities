@using WildlifeMortalities.App.Extensions
@using WildlifeMortalities.Data.Entities.Reports.MultipleMortalities
@using WildlifeMortalities.Shared.Extensions;
<MudItem xs="12" sm="4">
    <MudText Typo="Typo.h5">@Report.HumanReadableId</MudText>
    @if (!string.IsNullOrWhiteSpace(Report.OheNumber))
    {
        <MudField Label="OHE number" DisableUnderLine="true">@Report.OheNumber</MudField>
    }
    <MudField Label="Outfitter area" DisableUnderLine="true">@Report.OutfitterArea.Area</MudField>
    @if (Report.Result != Data.Enums.GuidedHuntResult.DidNotHunt)
    {
        <MudField Label="Hunting dates" DisableUnderLine="true">@Report.HuntStartDate?.ToString(Constants.FormatStrings.StandardDateFormat) <MudIcon Icon="@Icons.Material.Filled.ArrowForward" Size="Size.Small" /> @Report.HuntEndDate?.ToString(Constants.FormatStrings.StandardDateFormat)</MudField>
    }
    @if (Report.ChiefGuide != null)
    {
        <OutfitterGuideComponent Guide="@Report.ChiefGuide" Label="Chief guide" />
    }
    @foreach (var guide in Report.AssistantGuides)
    {
        <OutfitterGuideComponent Guide="guide" Label="Assistant guide" />
    }
    <MudField Label="Hunt result" DisableUnderLine="true">@Report.Result.GetDisplayName()</MudField>
</MudItem>
@code {

    [Parameter]
    [EditorRequired]
    public OutfitterGuidedHuntReport Report { get; set; } = null!;

}
