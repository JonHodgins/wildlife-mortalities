@using WildlifeMortalities.App.Extensions
@using WildlifeMortalities.App.Features.Reports.Activities
@using WildlifeMortalities.Data.Entities
@using WildlifeMortalities.Data.Entities.People
@using WildlifeMortalities.Data.Enums
@using WildlifeMortalities.Shared.Extensions;
@using WildlifeMortalities.Shared.Services
@inherits DbContextAwareComponent

<MudTextField @bind-Value="ViewModel.OheNumber" For="(() => ViewModel.OheNumber)" Label="OHE number" />
<DateRangePickerComponent Label="Hunting dates" @bind-DateRange="ViewModel.HuntingDateRange" For="@( () => ViewModel.HuntingDateRange)" />
<MudAutocomplete T="OutfitterArea" Label="Outfitter Area" @bind-Value="ViewModel.OutfitterArea" SearchFunc="SearchOutfitterAreas"
                 ToStringFunc="@(x => x == null ? string.Empty : x.Area)" MaxItems="null" Placeholder="Select an outfitter area" For="@(() => ViewModel.OutfitterArea)" />

<MudPaper Class="pa-4 my-4">
    <MudText Typo="Typo.h6">Guides</MudText>
    <MudAlert Severity="Severity.Info" Class="my-2">At least one guide is required.</MudAlert>
    <OutfitterGuideComponent Label="Chief guide" Guide="ViewModel.ChiefGuide" ReportViewModel="ViewModel" IsChiefGuide="true" ReadOnly="false" />
    <MudStack>
        <OutfitterGuideComponent Label="Assistant guide" Guide="ViewModel.AssistantGuides[0]" ReportViewModel="ViewModel" IsFirstAssistantGuide="true" ReadOnly="false" />
        <OutfitterGuideComponent Label="Assistant guide" Guide="ViewModel.AssistantGuides[1]" ReportViewModel="ViewModel" IsSecondAssistantGuide="true" ReadOnly="false" />
    </MudStack>
</MudPaper>

<MudSelect T="GuidedHuntResult?" @bind-Value="@ViewModel.Result" Label="Result" Placeholder="Select a result" For="@(() => ViewModel.Result)">
    @foreach (var item in Enum.GetValues<GuidedHuntResult>())
    {
        <MudSelectItem T="GuidedHuntResult?" Value="@item">@item.GetDisplayName()</MudSelectItem>
    }
</MudSelect>
@if (ViewModel.Result is GuidedHuntResult.WentHuntingAndKilledWildlife)
{
    <MudGrid Class="my-3">
        @foreach (var item in ViewModel.HuntedActivityViewModels)
        {
            <MudItem md="2" xs="6">
                <ActivityCardComponent EnableBioSubmission="false"
                                       OnEditClicked="@(() => Edit(item))" EnableDelete="true" EnableEdit="true"
                                       ActivityViewModel="item"
                                       OnDeleteClicked="@(() => Delete(item))" />
            </MudItem>
        }
    </MudGrid>
    <MudStack Row="true">
        <MudSpacer />
        <MudItem>
            <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Outlined.Add" OnClick="Add" Size="Size.Medium" Color="Color.Tertiary">Add mortality</MudButton>
            <ValidationMessage For="@(() => ViewModel.HuntedActivityViewModels)" Style="font-size: 12px; color: var(--mud-palette-error);" />
        </MudItem>
        <MudSpacer />
    </MudStack>
}


