@using WildlifeMortalities.App.Extensions
@using WildlifeMortalities.App.Features.Reports.Activities
@using WildlifeMortalities.Data.Entities.People
@using WildlifeMortalities.Data.Enums
@using WildlifeMortalities.Shared.Extensions
@using WildlifeMortalities.Shared.Services
@inherits DbContextAwareComponent

<MudTextField @bind-Value="ViewModel.OheNumber" For="(() => ViewModel.OheNumber)" Label="OHE number" />
<MudSelect T="GuidedHuntResult?" @bind-Value="@ViewModel.Result" Label="Result" Placeholder="Select a result" For="@(() => ViewModel.Result)">
    @foreach (var item in Enum.GetValues<GuidedHuntResult>())
    {
        <MudSelectItem T="GuidedHuntResult?" Value="@item">@item.GetDisplayName()</MudSelectItem>
    }
</MudSelect>
@if (ViewModel.Result is GuidedHuntResult.WentHuntingAndDidntKillWildlife or GuidedHuntResult.WentHuntingAndKilledWildlife)
{
    <DateRangePickerComponent Label="Hunting dates" @bind-DateRange="ViewModel.HuntingDateRange" For="@( () => ViewModel.HuntingDateRange)" />
}
<MudPaper Class="pa-4 my-4">
    <MudAutocomplete T="Client" For="@(() => ViewModel.Guide)" Label="Guide" Placeholder="Search by client id or last name" MinCharacters="2"
    @bind-Value="ViewModel.Guide" ToStringFunc="@(x => x is null ? "" : $"{x.EnvPersonId} | {x.FirstName} {x.LastName}")" SearchFunc="@SearchClientByEnvClientIdOrLastName"
                     AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" Class="mb-6">
    </MudAutocomplete>
</MudPaper>

@if (ViewModel.Result is GuidedHuntResult.WentHuntingAndKilledWildlife)
{
    <MudStack Row="true" Class="my-3 flex-wrap">
        @foreach (var item in ViewModel.HuntedActivityViewModels)
        {
            <MudItem md="2" xs="6">
                <ActivityCardComponent EnableBioSubmission="false"
                                       OnEditClicked="@(() => Edit(item))" EnableDelete="true" EnableEdit="true"
                                       ActivityViewModel="item"
                                       OnDeleteClicked="@(() => Delete(item))"/>
            </MudItem>
        }
    </MudStack>
    <MudStack Row="true">
        <MudSpacer/>
        <MudItem>
            <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Outlined.Add" OnClick="Add" Size="Size.Medium" Color="Color.Tertiary">Add mortality</MudButton>
            <ValidationMessage For="@(() => ViewModel.HuntedActivityViewModels)" Style="font-size: 12px; color: var(--mud-palette-error);" />
        </MudItem>
        <MudSpacer/>
    </MudStack>
}



