@using WildlifeMortalities.App.Extensions
@using WildlifeMortalities.Data.Entities.BiologicalSubmissions
@using FluentValidation
@using WildlifeMortalities.Shared.Extensions;
@using static WildlifeMortalities.App.Features.Shared.Mortalities.BioSubmissionAnalysisDialog;

<MudCheckBox @bind-Checked="BioSubmission.IsPeltProvided" Label="Pelt included?" For="() => BioSubmission.IsPeltProvided" Disabled="IsReadOnly" />

<MudSelect T="PeltColour?" @bind-Value="BioSubmission.PeltColour" Label="Pelt colour" For="() => BioSubmission.PeltColour" Disabled="IsReadOnly">
    @foreach (var item in Enum.GetValues<PeltColour>())
    {
        <MudSelectItem T="PeltColour?" Value="item">@item.GetDisplayName()</MudSelectItem>
    }
</MudSelect>

@code {
    [Parameter]
    public bool IsReadOnly { get; set; } = false;

    [Parameter]
    [EditorRequired]
    public GreyWolfBioSubmission BioSubmission { get; set; } = null!;

    public class GreyWolfBioSubmissionValidator : BioSubmissionValidator<GreyWolfBioSubmission>
    {
        public GreyWolfBioSubmissionValidator()
        {
            RuleFor(x => x.PeltColour).NotNull().IsInEnum();
        }
    }

}
