@using WildlifeMortalities.App.Extensions
@using WildlifeMortalities.App.Features.Shared.Mortalities.AmericanBlackBear
@using WildlifeMortalities.App.Features.Shared.Mortalities.CanadaLynx
@using WildlifeMortalities.App.Features.Shared.Mortalities.GreyWolf
@using WildlifeMortalities.App.Features.Shared.Mortalities.GrizzlyBear
@using WildlifeMortalities.App.Features.Shared.Mortalities.MountainGoat
@using WildlifeMortalities.App.Features.Shared.Mortalities.MuleDeer
@using WildlifeMortalities.App.Features.Shared.Mortalities.ThinhornSheep
@using WildlifeMortalities.App.Features.Shared.Mortalities.WhiteTailedDeer
@using WildlifeMortalities.App.Features.Shared.Mortalities.WoodBison
@using WildlifeMortalities.Data.Entities.BiologicalSubmissions
@using WildlifeMortalities.Shared.Extensions;
@if (BioSubmission is null)
{
    return;
}
@*This component is read-only, but it requires an EditForm as the child components contain input components which have a dependancy on EditContext*@
<EditForm Model="BioSubmission">
    @switch (BioSubmission)
    {
        case AmericanBlackBearBioSubmission bioSubmission:
            <AmericanBlackBearBioSubmissionComponent BioSubmission="bioSubmission" IsReadOnly="true"/>
            break;
        case CanadaLynxBioSubmission bioSubmission:
            <CanadaLynxBioSubmissionComponent BioSubmission="bioSubmission" IsReadOnly="true"/>
            break;
        case GreyWolfBioSubmission bioSubmission:
            <GreyWolfBioSubmissionComponent BioSubmission="bioSubmission" IsReadOnly="true"/>
            break;
        case GrizzlyBearBioSubmission bioSubmission:
            <GrizzlyBearBioSubmissionComponent BioSubmission="bioSubmission" IsReadOnly="true"/>
            break;
        case MountainGoatBioSubmission bioSubmission:
            <MountainGoatBioSubmissionComponent BioSubmission="bioSubmission" IsReadOnly="true"/>
            break;
        case MuleDeerBioSubmission bioSubmission:
            <MuleDeerBioSubmissionComponent BioSubmission="bioSubmission" IsReadOnly="true"/>
            break;
        case ThinhornSheepBioSubmission bioSubmission:
            <ThinhornSheepBioSubmissionComponent BioSubmission="bioSubmission" IsReadOnly="true"/>
            break;
        case WhiteTailedDeerBioSubmission bioSubmission:
            <WhiteTailedDeerBioSubmissionComponent BioSubmission="bioSubmission" IsReadOnly="true"/>
            break;
        case WoodBisonBioSubmission bioSubmission:
            <WoodBisonBioSubmissionComponent BioSubmission="bioSubmission" IsReadOnly="true"/>
            break;
        default:
            throw new ArgumentException(nameof(BioSubmission));
    }
    @if (BioSubmission.Age is not null)
    {
        <MudField Label="Age (years)" DisableUnderLine="true">@BioSubmission.Age.Years</MudField>
        <MudField Label="Confidence in age" DisableUnderLine="true">@BioSubmission.Age.Confidence?.GetDisplayName()</MudField>
    }
</EditForm>

@code {

    [Parameter]
    public BioSubmission BioSubmission { get; set; } = null!;

}
