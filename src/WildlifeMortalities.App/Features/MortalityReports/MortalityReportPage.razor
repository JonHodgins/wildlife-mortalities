@page "/mortality-reports/{personid:int}"
@using WildlifeMortalities.App.Extensions
@using WildlifeMortalities.Data.Entities.People
@using WildlifeMortalities.Shared.Models

<MudText Typo="Typo.h3" Class="mb-8">Mortality report</MudText>

<EditForm EditContext="_editContext">

    <MudSelect T="MortalityReportType" @bind-Value="_vm.MortalityReportType" For="@(() => _vm.MortalityReportType)" Label="Mortality report type">
        @foreach (MortalityReportType mortalityReportType in Enum.GetValues(typeof(MortalityReportType)))
        {
            <MudSelectItem Value="@mortalityReportType" T="MortalityReportType">@mortalityReportType.GetDisplayName()</MudSelectItem>
        }
    </MudSelect>

    @if (_vm.MortalityReportType == MortalityReportType.Conflict)
    {

    }
    else if (_vm.MortalityReportType == MortalityReportType.IndividualHunt)
    {
        <MortalityComponent ViewModelChanged="SetMortalityViewModel" ReportType="_vm.MortalityReportType" EditViewModel="null" />
    }
    else if (_vm.MortalityReportType == MortalityReportType.OutfitterGuidedHunt)
    {
        <MudList>
            @foreach (var item in _vm.MortalityViewModels)
            {
                <MudListItem>
                    <MudStack Row="true">
                        <MudStack Row="false">
                            @foreach (var property in item.GetProperties())
                            {
                                var normalizedValue = property.Value.ToLower();
                                @if (Boolean.TryParse(property.Value, out Boolean value) == true)
                                {
                                    <MudCheckBox T="Boolean" ReadOnly="true" Checked="value" Label="@property.Key" />
                                }
                                else if(DateTime.TryParse(property.Value, out DateTime dateValue) == true)
                                {
                                    <MudText>@property.Key: @dateValue.Date.ToShortDateString()</MudText>
                                }
                                else
                                {
                                    <MudText>@property.Key: @property.Value</MudText>
                                }
                            }
                        </MudStack>
                        <MudSpacer />
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" OnClick="@( () => Edit(item))" />
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="@( () => Delete(item))" />
                    </MudStack>
                </MudListItem>
            }
        </MudList>
        <MudStack Row="true">
            <MudSpacer />
            <MudFab Icon="@Icons.Material.Outlined.Add" OnClick="AddMortality" Size="Size.Medium"/>
        </MudStack>
    }
    else if (_vm.MortalityReportType == MortalityReportType.SpecialGuidedHunt)
    {
        <MudList>
            @foreach (var item in _vm.MortalityViewModels)
            {
                <MudListItem>
                    <MudStack Row="true">
                        <MudStack Row="false">
                            @foreach (var property in item.GetProperties())
                            {
                                var normalizedValue = property.Value.ToLower();
                                @if (Boolean.TryParse(property.Value, out Boolean value) == true)
                                {
                                    <MudCheckBox T="Boolean" ReadOnly="true" Checked="value" Label="@property.Key" />
                                }
                                else
                                {
                                    <MudText>@property.Key: @property.Value</MudText>
                                }
                            }
                        </MudStack>
                        <MudSpacer />
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" OnClick="@( () => Edit(item))" />
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="@( () => Delete(item))" />
                    </MudStack>
                </MudListItem>
            }
        </MudList>
        <MudStack Row="true">
            <MudSpacer />
            <MudFab Icon="@Icons.Material.Outlined.Add" OnClick="AddMortality" Size="Size.Medium"/>
        </MudStack>
    }
    else if (_vm.MortalityReportType == MortalityReportType.Trapped)
    {

    }

    <MudStack Row="true">
        <MudSpacer />
        <MudButton OnClick="CreateMortalityReport" Color="Color.Primary">Create Report</MudButton>
    </MudStack>
</EditForm>



